
1]
-Sélectionnez tous les champs des films sortis après 1960.
SELECT * FROM `film` WHERE date_sortie > "1960-01-01"

-Sélectionnez le titre des films sortis avant 1960.
SELECT titre FROM `film` WHERE date_sortie < "1960-01-01";


2]
-Changez la description du film dont l'ID est 35
UPDATE `film` SET `description`='Changer' WHERE id=35


3]
-Insérez un nouveau film - Qu'il soit rattaché à au moins trois catégories. Donnez les requêtes SQL utilisées.
INSERT INTO film (titre, slug, image, prix, description, date_sortie)
VALUES ("Harry Potter", "harry potter", "https://i-mom.unimedias.fr/2020/09/16/harry-potter-a-l-ecole-des-sorciers.jpg?auto=format%2Ccompress&crop=faces&cs=tinysrgb&fit=max&h=453&w=806", 30,"C'est le monde des sorciers" , "2001-05-12");

INSERT INTO films_categs (id_film, id_categorie)
VALUES (44,49),(44,35),(44,51)


4]
-récupérez dans la même requête tous les commentaires du film dont l'ID est 43,
 tous les champs du film 43, et tous les champs des utilisateurs ayant mis ces commentaires
SELECT commentaire.commentaire, user.*, film.* FROM commentaire
INNER JOIN user ON commentaire.id_user = user.id 
INNER JOIN film ON commentaire.id_film = film.id 
WHERE id_film = 43;


5]
-Supprimez le film dont le slug commence par "t"
DELETE FROM `film` WHERE slug LIKE "t%"


6]
-Récupérez tous les champs des utilisateurs qui ont mis des commentaires. Il ne doit pas avoir de doublons -
 un même utilisateur ne doit apparaître qu'une seule fois
SELECT DISTINCT id_user, user.* FROM commentaire 
INNER JOIN user ON commentaire.id_user = user.id


7]
-Récupérez tous les champs des films de la catégorie dont l'ID est 51
SELECT * FROM film INNER JOIN films_categs ON films_categs.id_film=id WHERE id_categorie=51


8]
-faites la moyenne des notes des films du site
SELECT AVG(note) FROM commentaire


9]
-Récupérez tous les films sortis au mois de juin
SELECT * FROM film WHERE MONTH(date_sortie)=6



10]
-Récupérez tous les utilisateurs dont le role est 1 et qui ont postés des commentaires.
 Il ne doit pas y avoir de doublon.
SELECT DISTINCT  user.* FROM commentaire 
INNER JOIN user ON commentaire.id_user = user.id
INNER JOIN film ON commentaire.id_film = film.id
WHERE role = 1 

